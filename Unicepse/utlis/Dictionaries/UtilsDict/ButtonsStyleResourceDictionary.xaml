<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">









    <Style x:Key="MenuBtnStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="#ccc"/>
        <Setter Property="BorderBrush" Value="{StaticResource ResourceKey=colors.primary}"/>
        <Setter Property="MaxHeight" Value="45"/>
        <Setter Property="MaxWidth" Value="45"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border 
                                x:Name="PART"
                                Background="{TemplateBinding Background}"
                                                                CornerRadius="7"
                                                                Height="40"
                                                                Width="40"
                                                                VerticalAlignment="Center"
                                                                HorizontalAlignment="Center"/>
                        <Icon:PackIconMaterial Kind="Menu" Foreground="{StaticResource ResourceKey=colors.primary}" Height="35"
                                                                Width="35"/>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Checked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="PART"
                                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                        To="#993300" Duration="0:0:0.2"/>
                                    <ThicknessAnimation  Storyboard.TargetName="PART_Ellipse"
                                                            Storyboard.TargetProperty="Margin"
                                                        To="15 0 0 0" Duration="0:0:0.2" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Unchecked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="PART"
                                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                        To="#aaa" Duration="0:0:0.2"/>
                                    <ThicknessAnimation  Storyboard.TargetName="PART_Ellipse"
                                                            Storyboard.TargetProperty="Margin"
                                                        To="0 0 0 0" Duration="0:0:0.2" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="IconBtn" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#787878"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5" BorderThickness="1" Padding="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#dcdcdc"/>
            </Trigger>
        </Style.Triggers>
    </Style>



    <Style x:Key="MenuButtonRD" TargetType="RadioButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource ResourceKey=colors.primary}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Background="{TemplateBinding Background}" Padding="5" BorderBrush="{StaticResource ResourceKey=colors.primary}" BorderThickness="0" CornerRadius="7">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#eee"/>
                <Setter Property="Foreground" Value="{StaticResource ResourceKey=colors.secondry}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{StaticResource ResourceKey=colors.secondry}"/>
                <Setter Property="Foreground" Value="{StaticResource ResourceKey=colors.background.white}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="BarButtonRD" TargetType="RadioButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#999"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Background="{TemplateBinding Background}" Padding="10 5" BorderBrush="#fff" BorderThickness="0" CornerRadius="7">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ResourceKey=colors.primary}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ResourceKey=colors.primary}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="RadioChoose" TargetType="RadioButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#999"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border x:Name="rd_border" Background="{TemplateBinding Background}" Padding="10" BorderBrush="{TemplateBinding Foreground}" BorderThickness="1" CornerRadius="7">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ResourceKey=colors.primary}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ResourceKey=colors.primary}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ResourceKey=colors.primary}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ResourceKey=colors.primary}"/>
            </Trigger>
        </Style.Triggers>
    </Style>























    <Style x:Key="MenuTopBtn" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource ResourceKey=colors.primary}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="50">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ResourceKey=colors.secondry}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="MenuButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#FFF"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" Padding="5" BorderBrush="{StaticResource ResourceKey=colors.primary}" BorderThickness="0" CornerRadius="7">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#dcdcdc"/>
            </Trigger>

        </Style.Triggers>
    </Style>

    <Style x:Key="DashboardCardbtn" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#000"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Margin" Value="15 3"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" Padding="5" BorderBrush="{StaticResource ResourceKey=colors.primary}" BorderThickness="0" CornerRadius="7">
                        <ContentPresenter HorizontalAlignment="Right" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#973D00"/>
                <Setter Property="Foreground" Value="#ffffff"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DashboardCardIcon" TargetType="Icon:PackIconMaterial">
        <Setter Property="Width" Value="15"/>
        <Setter Property="Height" Value="15"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="10 0 0 0"/>
    </Style>

    <Style x:Key="MenuButtonIcon" TargetType="Icon:PackIconMaterial">
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0 2 20 0"/>
    </Style>
    <!--Text Box Search-->
    <Style x:Key="SearchText" TargetType="TextBox">
        <Setter Property="Background" Value="#EEEEEE"/>
        <Setter Property="Foreground" Value="#888888"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Padding" Value="15 10"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0 10"/>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border x:Name="border" CornerRadius="10" Background="{TemplateBinding Background}"
                                BorderThickness="1"
                                BorderBrush="#EEEEEE"
                                SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="False"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden"/>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="#9d9d9d" TargetName="border"/>

                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" Value="#9d9d9d" TargetName="border"/>

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AddBtn" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource ResourceKey=colors.primary}"/>
        <Setter Property="Foreground" Value="{StaticResource colors.background.white}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Width" Value="150"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="0 0 0 0"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Grid.Row" Value="0"/>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="7">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource colors.secondry}"/>
                <Setter Property="Foreground" Value="{StaticResource colors.primary}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="EditBtn" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource ResourceKey=colors.primary}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <!--<Setter Property="Width" Value="150"/>-->
        <Setter Property="Height" Value="35"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Grid.Row" Value="0"/>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" Padding="5"  CornerRadius="7">
                        <ContentPresenter HorizontalAlignment="Right" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#dcdcdc"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DeleteBtn" TargetType="Button">
        <Setter Property="Background" Value="#DB0033"/>
        <Setter Property="Foreground" Value="#fff"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <!--<Setter Property="Width" Value="150"/>-->
        <Setter Property="Height" Value="35"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Grid.Row" Value="0"/>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" Padding="5"  CornerRadius="7">
                        <ContentPresenter HorizontalAlignment="Right" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="0.6"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TabBtn" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#121518"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Padding" Value="25 5"/>
        <Setter Property="BorderBrush" Value="{StaticResource ResourceKey=colors.primary}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="0"
                                BorderThickness="0 0 0 1" 
                                Padding="{TemplateBinding Padding}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource ResourceKey=colors.primary}"/>
            </Trigger>
        </Style.Triggers>
    </Style>













    <SolidColorBrush x:Key="RadioButton.Static.Background" Color="#fff"/>
    <SolidColorBrush x:Key="RadioButton.Static.Border" Color="#ccc"/>
    <SolidColorBrush x:Key="RadioButton.Static.Glyph" Color="Green"/>
    <SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="#FFF3F9FF"/>
    <SolidColorBrush x:Key="RadioButton.MouseOver.Border" Color="#FF5593FF"/>
    <SolidColorBrush x:Key="RadioButton.MouseOver.Glyph" Color="#FF212121"/>
    <SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="#FFD9ECFF"/>
    <SolidColorBrush x:Key="RadioButton.Pressed.Border" Color="#FF3C77DD"/>
    <SolidColorBrush x:Key="RadioButton.Pressed.Glyph" Color="#FF212121"/>
    <SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="#FFE6E6E6"/>
    <SolidColorBrush x:Key="RadioButton.Disabled.Border" Color="#FFBCBCBC"/>
    <SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="#FF707070"/>
    <Style x:Key="RadioButtonStyle1" TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisual1}"/>
        <Setter Property="Background" Value="{DynamicResource RadioButton.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource RadioButton.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="radioButtonBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5" Padding="5" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,1,2,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">

                            <ContentPresenter x:Name="contentPresenter" Grid.Row="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Border}"/>
                            <!--<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.MouseOver.Glyph}"/>-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Border}"/>
                            <!--<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Disabled.Glyph}"/>-->
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Border}"/>
                            <!--<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Pressed.Glyph}"/>-->
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" TargetName="radioButtonBorder" Value="#fff"/>
                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource ResourceKey=colors.primary}"/>
                            <Setter Property="Foreground"  Value="{StaticResource ResourceKey=colors.primary}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




</ResourceDictionary>